
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.0'

_lr_method = 'LALR'

_lr_signature = 990346122
    
_lr_action_items = {'DEDENT':([15,34,51,63,64,65,74,75,78,79,],[-14,-15,-28,-46,-29,-30,-13,78,-11,-12,]),'@':([0,2,3,6,10,11,15,21,24,34,45,51,64,65,72,73,78,],[-46,13,-3,-7,-4,-2,-14,-5,-6,-15,-8,-28,-29,-30,-9,-10,-11,]),'INDENT':([49,],[63,]),'STRING':([0,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,36,38,41,45,47,48,50,51,52,54,55,60,61,62,63,64,65,71,72,73,74,75,78,79,],[-46,14,-3,-46,-22,-7,-18,-24,-4,-2,29,-23,-14,-27,14,-19,-20,-21,-5,-17,14,-6,-26,14,-38,-46,14,-16,-15,14,-46,14,14,-8,-26,-46,14,-28,14,-37,14,14,14,-25,-46,-29,-30,77,-9,-10,-13,14,-11,-12,]),')':([5,8,9,14,16,18,19,20,22,27,31,33,36,37,39,40,41,42,43,47,48,53,54,56,58,59,62,66,67,68,76,77,],[-22,-18,-24,-23,-27,-19,-20,-21,-17,-38,-46,-16,-46,-44,-42,-40,-43,54,57,-26,-46,67,-37,69,-36,-34,-25,-41,-45,-39,-33,-35,]),'(':([4,26,28,30,31,36,38,48,52,55,],[26,38,43,43,26,26,38,26,38,38,]),'SYMBOL':([0,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,36,38,41,43,45,47,48,50,51,52,54,55,60,61,62,63,64,65,70,72,73,74,75,78,79,],[-46,4,-3,-46,-22,-7,28,-18,-24,-4,-2,30,-23,-14,-27,31,-19,-20,-21,-5,-17,31,-6,-26,36,-38,-46,31,-16,-15,31,-46,36,31,58,-8,-26,-46,31,-28,31,-37,36,31,31,-25,-46,-29,-30,58,-9,-10,-13,4,-11,-12,]),'=':([36,58,],[52,71,]),',':([5,8,9,14,16,18,19,20,22,27,31,33,36,37,39,40,41,42,47,48,53,54,56,58,59,62,66,67,68,76,77,],[-22,-18,-24,-23,-27,-19,-20,-21,-17,-38,-46,-16,-46,-44,-42,-40,-43,55,-26,-46,55,-37,70,-36,-34,-25,-41,-45,-39,-33,-35,]),'EOL':([4,5,8,9,14,16,18,19,20,22,23,25,27,29,31,33,35,47,48,50,54,60,61,62,],[-46,-22,-18,-24,-23,-27,-19,-20,-21,-17,34,-26,-38,45,-46,-16,49,-26,-46,65,-37,49,49,-25,]),'PYCODE':([0,2,3,4,5,6,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,36,38,41,45,47,48,50,51,52,54,55,60,61,62,63,64,65,72,73,74,75,78,79,],[-46,16,-3,-46,-22,-7,-18,-24,-4,-2,-23,-14,-27,16,-19,-20,-21,-5,-17,16,-6,-26,16,-38,-46,16,-16,-15,16,-46,16,16,-8,-26,-46,16,-28,16,-37,16,16,16,-25,-46,-29,-30,-9,-10,-13,16,-11,-12,]),'IMPORT':([0,2,3,6,10,11,15,21,24,34,45,51,64,65,72,73,78,],[-46,12,-3,-7,-4,-2,-14,-5,-6,-15,-8,-28,-29,-30,-9,-10,-11,]),'[':([0,2,3,4,5,6,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,36,38,41,45,47,48,50,51,52,54,55,60,61,62,63,64,65,72,73,74,75,78,79,],[-46,17,-3,-46,-22,-7,-18,-24,-4,-2,-23,-14,-27,17,-19,-20,-21,-5,-17,17,-6,-26,17,-38,-46,17,-16,-15,17,-46,17,17,-8,-26,-46,17,-28,17,-37,17,17,17,-25,-46,-29,-30,-9,-10,-13,17,-11,-12,]),':':([4,25,27,44,46,54,57,69,],[-46,35,-38,60,61,-37,-32,-31,]),']':([5,8,9,14,16,18,19,20,22,27,31,32,33,47,48,54,62,],[-22,-18,-24,-23,-27,-19,-20,-21,-17,-38,-46,48,-16,-26,-46,-37,-25,]),'IMPLICIT':([0,2,3,4,5,6,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,36,38,41,45,47,48,50,51,52,54,55,60,61,62,63,64,65,72,73,74,75,78,79,],[-46,9,-3,-46,-22,-7,-18,-24,-4,-2,-23,-14,-27,9,-19,-20,-21,-5,-17,9,-6,-26,9,-38,-46,9,-16,-15,9,-46,9,9,-8,-26,-46,9,-28,9,-37,9,9,9,-25,-46,-29,-30,-9,-10,-13,9,-11,-12,]),'DEF':([0,2,3,6,10,11,15,21,24,34,45,51,64,65,72,73,78,],[-46,7,-3,-7,-4,-2,-14,-5,-6,-15,-8,-28,-29,-30,-9,-10,-11,]),'$end':([0,1,2,3,6,10,11,15,21,24,34,45,51,64,65,72,73,78,],[-46,0,-1,-3,-7,-4,-2,-14,-5,-6,-15,-8,-28,-29,-30,-9,-10,-11,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[2,]),'callparams':([4,31,36,48,],[25,47,47,62,]),'pycode':([2,17,23,26,32,35,38,41,50,52,55,60,61,75,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'paramname':([43,70,],[59,76,]),'paramexpr':([26,38,52,55,],[39,39,66,39,]),'paramnames':([43,],[56,]),'group':([26,38,52,55,],[37,37,37,37,]),'program':([0,],[1,]),'call':([2,75,],[10,79,]),'statement':([2,],[11,]),'import':([2,],[6,]),'empty':([0,4,31,36,48,63,],[3,27,27,27,27,74,]),'string':([2,17,23,26,32,35,38,41,50,52,55,60,61,75,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'fullcall':([2,75,],[15,15,]),'paramvalue':([26,38,55,],[40,40,68,]),'paramdefs':([28,30,],[44,46,]),'callsorblock':([35,60,61,],[51,72,73,]),'implicit':([2,17,23,26,32,35,38,41,50,52,55,60,61,75,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'cycle':([2,17,23,26,32,35,38,41,50,52,55,60,61,75,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'simplecall':([2,17,23,26,32,35,38,41,50,52,55,60,61,75,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'definition':([2,],[21,]),'calls':([63,],[75,]),'expr':([2,17,23,26,32,35,38,41,50,52,55,60,61,75,],[22,22,33,22,33,22,22,33,33,22,22,22,22,22,]),'exprs':([2,17,26,35,38,52,55,60,61,75,],[23,32,41,50,41,41,41,50,50,23,]),'paramvalues':([26,38,],[42,53,]),'typerenderer':([2,],[24,]),'block':([49,],[64,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','C:\\sandbox\\py\\magro\\parser.py',8),
  ('statements -> statements statement','statements',2,'p_statements','C:\\sandbox\\py\\magro\\parser.py',14),
  ('statements -> empty','statements',1,'p_statements','C:\\sandbox\\py\\magro\\parser.py',15),
  ('statement -> call','statement',1,'p_statement','C:\\sandbox\\py\\magro\\parser.py',25),
  ('statement -> definition','statement',1,'p_statement','C:\\sandbox\\py\\magro\\parser.py',26),
  ('statement -> typerenderer','statement',1,'p_statement','C:\\sandbox\\py\\magro\\parser.py',27),
  ('statement -> import','statement',1,'p_statement','C:\\sandbox\\py\\magro\\parser.py',28),
  ('import -> IMPORT STRING EOL','import',3,'p_import','C:\\sandbox\\py\\magro\\parser.py',32),
  ('definition -> DEF SYMBOL paramdefs : callsorblock','definition',5,'p_definition','C:\\sandbox\\py\\magro\\parser.py',36),
  ('typerenderer -> @ SYMBOL paramdefs : callsorblock','typerenderer',5,'p_typerenderer','C:\\sandbox\\py\\magro\\parser.py',44),
  ('block -> INDENT calls DEDENT','block',3,'p_block','C:\\sandbox\\py\\magro\\parser.py',50),
  ('calls -> calls call','calls',2,'p_calls','C:\\sandbox\\py\\magro\\parser.py',54),
  ('calls -> empty','calls',1,'p_calls','C:\\sandbox\\py\\magro\\parser.py',55),
  ('call -> fullcall','call',1,'p_call','C:\\sandbox\\py\\magro\\parser.py',62),
  ('call -> exprs EOL','call',2,'p_call','C:\\sandbox\\py\\magro\\parser.py',63),
  ('exprs -> exprs expr','exprs',2,'p_exprs','C:\\sandbox\\py\\magro\\parser.py',67),
  ('exprs -> expr','exprs',1,'p_exprs','C:\\sandbox\\py\\magro\\parser.py',68),
  ('expr -> string','expr',1,'p_expr','C:\\sandbox\\py\\magro\\parser.py',76),
  ('expr -> implicit','expr',1,'p_expr','C:\\sandbox\\py\\magro\\parser.py',77),
  ('expr -> cycle','expr',1,'p_expr','C:\\sandbox\\py\\magro\\parser.py',78),
  ('expr -> simplecall','expr',1,'p_expr','C:\\sandbox\\py\\magro\\parser.py',79),
  ('expr -> pycode','expr',1,'p_expr','C:\\sandbox\\py\\magro\\parser.py',80),
  ('string -> STRING','string',1,'p_string','C:\\sandbox\\py\\magro\\parser.py',84),
  ('implicit -> IMPLICIT','implicit',1,'p_implicit','C:\\sandbox\\py\\magro\\parser.py',88),
  ('cycle -> [ exprs ] callparams','cycle',4,'p_cycle','C:\\sandbox\\py\\magro\\parser.py',92),
  ('simplecall -> SYMBOL callparams','simplecall',2,'p_simplecall','C:\\sandbox\\py\\magro\\parser.py',96),
  ('pycode -> PYCODE','pycode',1,'p_pycode','C:\\sandbox\\py\\magro\\parser.py',100),
  ('fullcall -> SYMBOL callparams : callsorblock','fullcall',4,'p_fullcall','C:\\sandbox\\py\\magro\\parser.py',104),
  ('callsorblock -> EOL block','callsorblock',2,'p_callsorblock','C:\\sandbox\\py\\magro\\parser.py',108),
  ('callsorblock -> exprs EOL','callsorblock',2,'p_callsorblock','C:\\sandbox\\py\\magro\\parser.py',109),
  ('paramdefs -> ( paramnames )','paramdefs',3,'p_paramdefs','C:\\sandbox\\py\\magro\\parser.py',116),
  ('paramdefs -> ( )','paramdefs',2,'p_paramdefs','C:\\sandbox\\py\\magro\\parser.py',117),
  ('paramnames -> paramnames , paramname','paramnames',3,'p_paramnames','C:\\sandbox\\py\\magro\\parser.py',124),
  ('paramnames -> paramname','paramnames',1,'p_paramnames','C:\\sandbox\\py\\magro\\parser.py',125),
  ('paramname -> SYMBOL = STRING','paramname',3,'p_paramname','C:\\sandbox\\py\\magro\\parser.py',132),
  ('paramname -> SYMBOL','paramname',1,'p_paramname','C:\\sandbox\\py\\magro\\parser.py',133),
  ('callparams -> ( paramvalues )','callparams',3,'p_callparams','C:\\sandbox\\py\\magro\\parser.py',140),
  ('callparams -> empty','callparams',1,'p_callparams','C:\\sandbox\\py\\magro\\parser.py',141),
  ('paramvalues -> paramvalues , paramvalue','paramvalues',3,'p_paramvalues','C:\\sandbox\\py\\magro\\parser.py',148),
  ('paramvalues -> paramvalue','paramvalues',1,'p_paramvalues','C:\\sandbox\\py\\magro\\parser.py',149),
  ('paramvalue -> SYMBOL = paramexpr','paramvalue',3,'p_paramvalue','C:\\sandbox\\py\\magro\\parser.py',156),
  ('paramvalue -> paramexpr','paramvalue',1,'p_paramvalue','C:\\sandbox\\py\\magro\\parser.py',157),
  ('paramexpr -> exprs','paramexpr',1,'p_paramexpr','C:\\sandbox\\py\\magro\\parser.py',164),
  ('paramexpr -> group','paramexpr',1,'p_paramexpr','C:\\sandbox\\py\\magro\\parser.py',165),
  ('group -> ( paramvalues )','group',3,'p_group','C:\\sandbox\\py\\magro\\parser.py',176),
  ('empty -> <empty>','empty',0,'p_empty','C:\\sandbox\\py\\magro\\parser.py',180),
]
